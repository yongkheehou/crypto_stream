apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-service
  labels:
    app: kafka-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-service
  template:
    metadata:
      labels:
        app: kafka-service
    spec:
      initContainers:
      - name: wait-for-kafka
        image: busybox
        command: ['sh', '-c', 'until nc -z kafka-broker.kafka-broker.svc.cluster.local 9092; do echo waiting for kafka-broker; sleep 2; done;']
      containers:
      - name: kafka-service
        image: crypto-stream-kafka:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8002
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-broker.kafka-broker.svc.cluster.local:9092"
        - name: KAFKA_CLIENT_ID
          value: "crypto-stream-producer"
        - name: KAFKA_RETRIES
          value: "5"
        - name: KAFKA_RETRY_BACKOFF_MS
          value: "1000"
        - name: KAFKA_DELIVERY_TIMEOUT_MS
          value: "30000"
        - name: KAFKA_REQUEST_TIMEOUT_MS
          value: "10000"
        - name: KAFKA_MESSAGE_TIMEOUT_MS
          value: "30000"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        startupProbe:
          httpGet:
            path: /health
            port: 8002
          failureThreshold: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ['sh', '-c', 'nc -z kafka-broker.kafka-broker.svc.cluster.local 9092']
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ['sh', '-c', 'nc -z kafka-broker.kafka-broker.svc.cluster.local 9092']
          initialDelaySeconds: 15
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  type: ClusterIP
  selector:
    app: kafka-service
  ports:
  - name: api
    port: 8002
    targetPort: 8002
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kafka-traffic
spec:
  podSelector:
    matchLabels:
      app: kafka-broker
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: kafka-service
    ports:
    - protocol: TCP
      port: 9092
